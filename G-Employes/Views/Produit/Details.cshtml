@model GestionEmployes.Models.Produit

@{
    ViewData["Title"] = "Details";
    Layout = null;
}



<!-- App css -->
<link href="assets/css/icons.min.css" rel="stylesheet" type="text/css">
<link href="assets/css/app.min.css" rel="stylesheet" type="text/css" id="light-style">

<div class="text-center container">
    <div class="card text-center">
        <div class="card-body">
            <img src="~/ImagesProducts/@Model.ImageUrl" class="rounded-circle avatar-lg img-thumbnail" alt="profile-image">

            <h4 class="mb-0 mt-2">@Model.Desgination</h4>
            <p class="text-muted font-14"></p>



            <div class="text-start mt-4 container">

                <p class="text-muted mb-2 font-16">

                    <strong>Desgination :</strong>

                    <span class="ms-2">   @Html.DisplayFor(model => model.Desgination) </span>
                </p>

                <p class="text-muted mb-2 font-16">

                    <strong>Prix :</strong>

                    <span class="ms-2"> @Html.DisplayFor(model => model.Prix) </span>
                </p>


                <p class="text-muted mb-2 font-16">

                    <strong>Quantite :</strong>

                    <span class="ms-2">  @Html.DisplayFor(model => model.Quantite) </span>
                </p>


                <p class="text-muted mb-2 font-16">

                    <strong>Categorie :</strong>

                    <span class="ms-2"> @Html.DisplayFor(model => model.Categorie.Type) </span>
                </p>

            </div>
            <br /><br />

            <a onclick="ShowInModal('@Url.Action("Edit", "Produit",new { id = Model.Id }, Context.Request.Scheme)','MODIFIER LE PRODUIT')" class="btn btn-success text-white">Modifier</a>
            <a onclick="hideModalLayout()" class="btn btn-secondary text-white">Retour à la list</a>


        </div>
    </div>
</div>
        <script src="~/JavaScript/myjs.js"></script>
        <div class="rightbar-overlay"></div>
